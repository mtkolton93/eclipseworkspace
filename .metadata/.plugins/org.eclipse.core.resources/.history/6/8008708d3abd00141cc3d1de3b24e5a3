package poker;

import java.util.ArrayList;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.GridLayout;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;

@SuppressWarnings("serial")
public class Hand extends JPanel
{
	private int score;
//	private int x; //position of first card
//	private int y;
	private boolean house = false;
	ArrayList<Card> cards = new ArrayList<Card>();
	private ImageIcon hidden = new ImageIcon("images/CardBack.png");
	
	public Hand(boolean h)
	{
		house = h;
		setLayout(new GridLayout(0, 7, 2, 2));
		add(new JPanel());
	}
	
	public void addCard(Card c)
	{
		cards.add(c);
		if(!house)
			//add(new JLabel(hidden));
		//else
			add(c);
	}
	
	public void paintComponent(Graphics g)
	{
		g.setColor(Color.green);
		g.fillRect(0, 0, 800, 300);
	}
	
//	public void paint(Graphics g, boolean house)
//	{
//		if(house)
//		{
//			hidden.paintIcon(cards.get(1).getPoker(), g, x, y);
//		}
//		else
//		{
//			cards.get(0).paint(g, x, y);
//		}
//		for(int i = 1; i < handSize(); i++)
//		{
//			//player hand
//			if(y > 200)
//				cards.get(i).paint(g, x+(i*75), y);
//			//house hand
//			else
//				cards.get(i).paint(g, x-(i*75), y);
//				
//		}
//	}
	
	public int getScore()
	{
		return score;
	}
	
	public int handSize()
	{
		return cards.size();
	}
	
	public boolean contains(int i)
	{
		for(Card c : cards)
		{
			if(c.getValue() == i)
				return true;
		}
		
		return false;
	}
	
	public int lowest()
	{
		int ret = 15;
		for(Card c : cards)
		{
			if(c.getValue() < ret)
				ret = c.getValue();
		}
		
		return ret;
	}
	
	public int highest()
	{
		int ret = 0;
		for(Card c : cards)
		{
			if(c.getValue() > ret)
				ret = c.getValue();
		}
		
		return ret;
	}	
	
//	public void setPosition(int xPos, int yPos)
//	{
//		x = xPos;
//		y = yPos;
//	}
}